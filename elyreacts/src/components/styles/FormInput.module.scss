@import "../../variables.scss";

.container {
    position: relative;

    margin-top: 0.5rem;

    & > label {
        position: absolute;
        top: 0.75rem;
        left: 0.5rem;

        pointer-events: none;

        font-size: 1rem;
        text-transform: uppercase;

        color: $color_grey_dark;

        transition: $transition_time_link;
    }

    & > input {
        box-shadow: none; // Remove ugly red outline

        transition: $transition_time_anim;

        border: none;
        border-left: 0.15rem solid $color_grey_dark;
        box-sizing: border-box;

        margin: 0.25rem 0 0 0;

        width: 16rem;

        &:valid {
            border-color: $color_success;
        }
        &:invalid {
            border-color: $color_fail;
        }
        &:focus,
        &[value=""]:not(:invalid) {
            border-color: $color_grey_dark;
        }
    }

    &:focus-within > input,
    & > input:not([value=""]) {
        margin-top: 1.25rem;
    }

    &:focus-within > label,
    & > input:not([value=""]) + label /* When element contains text */ {
        // todo: Do we need this too?
        // & > input:invalid + label /* When element contains text */
        top: 0.25rem;
        // top: 1.75rem;
        left: 0rem;

        font-size: 0.75rem;
    }
}

.radioContainer {
    margin-top: 1.5rem;

    width: 100%;

    & > label {
        pointer-events: none;

        font-size: 1rem;
        text-transform: uppercase;

        color: $color_grey_dark;
    }

    & > .radioOptionsContainer {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: flex-start;

        margin-top: 0.5rem;

        & > .radioOption {
            display: inline-block;

            & > label {
                display: inline-block;
                text-transform: uppercase;

                color: $color_grey_light;

                padding: 0.5em 1em;

                transition: $transition_time_link;
            }

            & > input {
                // Hide original radio button
                position: absolute;
                opacity: 0;

                &:checked + label {
                    font-weight: bolder;
                    color: $color_white;

                    background: $color_indywalls_primary;
                }
            }
        }
    }
}

.checkboxContainer {
    margin-top: 0.5rem;

    width: 100%;

    & > label {
        display: inline-block;
        position: relative;

        padding: 0.25rem 0 0.25rem 2rem;

        font-size: 1rem;
        text-transform: uppercase;

        color: $color_grey_dark;

        &::before {
            content: "";

            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: 0;

            height: 1.25rem;
            width: 1.25rem;

            background: $color_grey_dark;

            transition: $transition_time_link;
        }
    }

    & > input {
        // Hide original checkbox without affecting accessibility
        visibility: hidden;
        position: absolute;
        opacity: 0;

        &:checked + label {
            &::before {
                background: $color_indywalls_primary;
            }
        }
    }
}

.dropdownContainer {
    position: relative;

    margin-top: 0.5rem;

    width: 100%;

    & > label {
        position: absolute;
        top: 0.25rem;
        left: 0;

        pointer-events: none;

        font-size: 1rem;
        text-transform: uppercase;

        color: $color_grey_dark;

        transition: $transition_time_link;
    }

    & > select {
        position: relative;
        display: inline-block;

        box-shadow: none;

        width: 16rem; // todo: make all widths 100% to fill containing element

        border: none;
        border-left: 0.15rem solid $color_grey_dark;
        box-sizing: border-box;

        margin: 1.5rem 0 0 0;

        background: $color_white;
        border: 0.15rem solid $color_grey_dark;
        // line-height: 1.5em; // todo: line-height on EVERYTHING

        transition: $transition_time_anim;

        &:valid {
            border-color: $color_success;
        }
        &:invalid {
            border-color: $color_fail;
        }
        &:focus,
        &[value=""]:not(:invalid) {
            border-color: $color_grey_dark;
        }
    }
}
